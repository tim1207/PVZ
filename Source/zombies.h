#pragma once
namespace game_framework {
	class Zombies
	{
	public:
		Zombies();
		Zombies(int, int, int);				  // ?L?????l??
		void LoadBitmap();				    // ???????????
		void OnMove();					      // ?B?z?L?????@
		void OnShow();					      // ???b?e????
		int GetLife();					      // ?^???e??????R
		bool isAlive();					      // ??d?O?_?w???`
		void GiveLife();				      // ?]?w?L?????R
		string GetPath();				      // ???o????????|
		string GetPathWithStatus();		// ????????????|
		void SetStatus(int);			    // ?]?w?L???e?????A
		int GetStatus();				      // ?^???L???e?????A
		void SetFrames();				      // ?]?w?L??????`?q
		void Hitted(int);				      // ?L??Q????
		int GetRow();					        // ?^???L???b???C??
		int GetX();						        // ?^???e??X?y??
		void SetID(int);				      // ?]?w?L???????
		void SetX(int);
		int GetID();					        // ?^???L???????
		bool Attack();					      // ???L??o?????
		bool isFinished();				    // ??d???`??e?O?_?w?g????
		void GoToDie();					      // ???L?????????`
		void BoomToDie();				      // ???L??Q????
		void MoveX();					        // ???L??V?e????
		void SetSnowCounter();			  // ?]?w?N??p???
		void Faster();					      // ???L??[?t(?K???)
	private:
		int x, y;						          // ?y??
		int AttackCounter;				    // ???????p???
		int AttackClock;				      // ???????N?o???
		int SnowCounter;				      // ?N???p???
		int row;						          // ?C??
		unsigned int life;				    // ??R
		int ID;							          // ?L???????
		/*
			0:none
			1:zombie
			2:cone head zombie
			3:bucket head zombie
		*/
		int status;						        // ?L??????A?A1?O?????A2?O????
		int LastMove;					        // ?x?s?W?@?B????????A(?N???A??)
		int velocity;					        // ?L???????t??
		int WalkingFrames1=17;				    
		int AttackingFrames1=20;
		int WalkingFrames2=20;				    
		int AttackingFrames2=10;
		int WalkingFrames3=14;				    
		int AttackingFrames3=10;	


		CAnimation NormalWalking1;// for id 1
		CAnimation NormalAttacking1;
		CAnimation NormalWalking2;// for id 2
		CAnimation NormalAttacking2;
		CAnimation NormalWalking3;// for id 3
		CAnimation NormalAttacking3;


		CAnimation AnimeDie;
		CAnimation Head;
		CAnimation BoomDie;
		bool Boom;						        // ?O?_?O?Q????
		bool HeadFinished;				    // ?Y???U??F??e?O?_?w????
		bool DieFinished;				      // ???`????e?O?_?w????
		bool BoomFinished;				    // ?z?????`????e?O?_?w????
	};
}